# Based on the "trust" template v0.1.2
# https://github.com/japaric/trust/tree/v0.1.2

dist: bionic
os: linux
language: rust
services: docker

# TODO Rust builds on stable by default, this can be
# overridden on a case by case basis down below.

env:
  global:
    # TODO Update this to match the name of your project.
    - CRATE_NAME=wishbone-tool

jobs:
  # TODO These are all the build jobs. Adjust as necessary. Comment out what you
  # don't need
  include:
    # Android
    # - env: TARGET=aarch64-linux-android DISABLE_TESTS=1
    # - env: TARGET=arm-linux-androideabi DISABLE_TESTS=1
    # - env: TARGET=armv7-linux-androideabi DISABLE_TESTS=1
    # - env: TARGET=i686-linux-android DISABLE_TESTS=1
    # - env: TARGET=x86_64-linux-android DISABLE_TESTS=1

    # # iOS
    # - env: TARGET=aarch64-apple-ios DISABLE_TESTS=1
    #   os: osx
    # - env: TARGET=armv7-apple-ios DISABLE_TESTS=1
    #   os: osx
    # - env: TARGET=armv7s-apple-ios DISABLE_TESTS=1
    #   os: osx
    # - env: TARGET=i386-apple-ios DISABLE_TESTS=1
    #   os: osx
    # - env: TARGET=x86_64-apple-ios DISABLE_TESTS=1
    #   os: osx

    # Linux
    - env: TARGET=aarch64-unknown-linux-musl
    - env: TARGET=arm-unknown-linux-musleabi
    - env: TARGET=armv7-unknown-linux-musleabihf
    - env: TARGET=i686-unknown-linux-musl
    # - env: TARGET=i686-unknown-linux-musl
    - env: TARGET=mips-unknown-linux-musl
    - env: TARGET=mips64-unknown-linux-muslabi64
    - env: TARGET=mips64el-unknown-linux-muslabi64
    - env: TARGET=mipsel-unknown-linux-musl
    - env: TARGET=powerpc-unknown-linux-musl
    - env: TARGET=powerpc64-unknown-linux-musl
    - env: TARGET=powerpc64le-unknown-linux-musl DISABLE_TESTS=1
    - env: TARGET=s390x-unknown-linux-musl DISABLE_TESTS=1
    - env: TARGET=x86_64-unknown-linux-musl
    # - env: TARGET=x86_64-unknown-linux-musl

    # OSX
    # Apple stopped shipping compilers for i686-apple-darwin, and so
    # the Rust project demoted this to a "Tier 3" target, meaning
    # libstd is no longer built.  This means we can no longer generate
    # binaries for this platform.
    # - env: TARGET=i686-apple-darwin MACOSX_DEPLOYMENT_TARGET=10.7
    #   os: osx
    - env: TARGET=x86_64-apple-darwin MACOSX_DEPLOYMENT_TARGET=10.7
      os: osx

    # *BSD
    # - env: TARGET=i686-unknown-freebsd DISABLE_TESTS=1
    # - env: TARGET=x86_64-unknown-freebsd DISABLE_TESTS=1
    # - env: TARGET=x86_64-unknown-netbsd DISABLE_TESTS=1

    # Windows
    - env: TARGET=x86_64-pc-windows-gnu EXTENSION=.exe
    # - env: TARGET=i686-pc-windows-gnu EXTENSION=.exe

    # Bare metal
    # These targets don't support std and as such are likely not suitable for
    # most crates.
    # - env: TARGET=thumbv6m-none-eabi
    # - env: TARGET=thumbv7em-none-eabi
    # - env: TARGET=thumbv7em-none-eabihf
    # - env: TARGET=thumbv7m-none-eabi

    # Testing other channels
    - env: TARGET=x86_64-unknown-linux-gnu
      rust: nightly
    # - env: TARGET=x86_64-apple-darwin
    #   os: osx
    #   rust: nightly

before_install:
  - set -e
  - rustup self update

install:
  - sh ci/install.sh
  - source ~/.cargo/env || true

script:
  - bash ci/script.sh

after_script: set +e

before_deploy:
  - sh ci/before_deploy.sh

deploy:
  token:
    secure: "e2HtPHKvA3zywqwLaUkU8Vo43nUh7cQFsvKYbUKO/suk/kFhXVIQpq/Tij/Wg1es/ni1V1PCEIBTH693QYrBp54Kbes0BjMq49hqR998WKswFOZuhTkHkh2wovbs3cImOrc55F48gdArAmokjxjgrvdzOQ8cLr5HeL2yyOjAuOvaXRF5mRuJ3P9FXdH60i+XCCKteeQ2UzmJ+JAlxT+KVS7+VnwAXKzL+aNi6foFoOBAaIDDxZPuQMRgWNMpYR71uwcN8pDCHDr3EgZ60d+n339Sf9IDIoy8dvqPoXDynL+gCm8VNRW+6MLWBxkSxTGUnSQsSJob3N+tp5cyMk0Au3yqk9+Me6MhksBwAU7CBm6aEL+Q6VjpfcFEKs+L4TatASG9BsuA81tKDfmivDna/8Qfxq4AdQ04WwZ5HLwV2sDxbqfco85RF4SeM7Z25xYUODx/Ca+4b0IJQJvQeGs7KETsKzRPtaFcapHG9zGdFgawW2xC2z64uHIE488oqGEPOFHrDeBkEK1m1BV8m54/JmmS/7gyn0FVT+FyP1Sm3DXVLrIFHCzj104/he4VZu4ynGwcIMiqvORxIzkvpMdskcFZX+gW9AHdVLTDGsRsDLeVcn2NnLgGTjjhTJsjkv67oBbFZ5DdSLT38EKFxHNUIWhiO+g6JaTRe0KDg0TpCFU="
  file_glob: true
  file: wishbone-tool/$CRATE_NAME-$TRAVIS_TAG-$TARGET.*
  on:
    # TODO Here you can pick which targets will generate binary releases
    # In this example, there are some targets that are tested using the stable
    # and nightly channels. This condition makes sure there is only one release
    # for such targets and that's generated using the stable channel
    condition: $TRAVIS_RUST_VERSION = stable
    tags: true
  provider: releases

cache: cargo
before_cache:
  # Travis can't cache files that are not readable by "others"
  - chmod -R a+r $HOME/.cargo

branches:
  only:
    # release tags
    - /^v\d+\.\d+\.\d+.*$/
    - master

notifications:
  email:
    on_success: never
